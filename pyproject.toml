[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.0"]
build-backend = "setuptools.build_meta"

[project]
name = "qtlh-framework"
dynamic = ["version"]
description = "Quantum-enhanced Topological Linguistic Hyperdimensional Framework for Genomic Analysis"
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE"}
keywords = [
    "quantum-computing",
    "topological-data-analysis",
    "hyperdimensional-computing",
    "language-models",
    "genomics",
    "bioinformatics"
]
authors = [
    {name = "QTL-H Development Team", email = "contact@qtlh-framework.org"}
]
maintainers = [
    {name = "QTL-H Development Team", email = "contact@qtlh-framework.org"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "pandas>=1.3.0",
    "torch>=1.9.0",
    "pennylane>=0.19.0",
    "qiskit>=0.34.0",
    "tensorflow>=2.7.0",
    "transformers>=4.15.0",
    "scikit-learn>=0.24.0",
    "gudhi>=3.5.0",
    "dionysus>=2.0.0",
    "gtda>=0.5.0",
    "lightning>=2.0.0",
    "wandb>=0.12.0",
    "matplotlib>=3.4.0",
    "seaborn>=0.11.0",
    "networkx>=2.6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.2.5",
    "pytest-cov>=2.12.0",
    "black>=21.12b0",
    "flake8>=4.0.1",
    "mypy>=0.910",
    "isort>=5.10.0",
    "pre-commit>=2.17.0",
    "bandit>=1.7.0",
    "safety>=1.10.0"
]
docs = [
    "sphinx>=4.3.0",
    "sphinx-rtd-theme>=1.0.0",
    "nbsphinx>=0.8.0",
    "jupyter>=1.0.0",
    "myst-parser>=0.15.0"
]
gpu = [
    "torch>=1.9.0+cu111",
    "tensorflow-gpu>=2.7.0"
]

[project.urls]
Homepage = "https://github.com/qtlh-framework/qtlh-framework"
Documentation = "https://qtlh-framework.readthedocs.io/"
Repository = "https://github.com/qtlh-framework/qtlh-framework.git"
Issues = "https://github.com/qtlh-framework/qtlh-framework/issues"

[tool.setuptools]
package-dir = {"" = "src"}
packages = ["qtlh"]

[tool.setuptools_scm]
write_to = "src/qtlh/_version.py"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=qtlh --cov-report=term-missing"
markers = [
    "slow: marks tests as slow",
    "gpu: marks tests that require GPU",
    "quantum: quantum module tests",
    "hd: hyperdimensional computing tests",
    "topology: topological analysis tests",
    "language: language model tests",
    "integration: integration tests",
    "validation: validation tests"
]

[tool.coverage.run]
source = ["qtlh"]
omit = [
    "tests/*",
    "docs/*",
    "examples/*",
    "setup.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]

[tool.bandit]
exclude_dirs = ["tests", "docs", "examples"]
skips = ["B101"]
