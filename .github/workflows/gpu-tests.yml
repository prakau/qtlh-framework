name: GPU Tests

on:
  push:
    branches: [ main ]
    paths:
      - 'src/qtlh/**'
      - 'tests/**'
      - '.github/workflows/gpu-tests.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/qtlh/**'
      - 'tests/**'
      - '.github/workflows/gpu-tests.yml'
  workflow_dispatch:

jobs:
  gpu-test:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, 'skip gpu') }}

    container:
      image: nvcr.io/nvidia/pytorch:23.03-py3
      options: --gpus all

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: System information
      run: |
        nvidia-smi
        python -c "import torch; print('CUDA available:', torch.cuda.is_available())"
        python -c "import torch; print('CUDA device count:', torch.cuda.device_count())"
        python -c "import torch; print('CUDA version:', torch.version.cuda)"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev,gpu]"

    - name: Run GPU tests
      run: |
        pytest -v tests/ -m "gpu" --cov=qtlh --cov-report=xml

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: gpu-tests
        name: codecov-gpu

  quantum-gpu:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, 'skip gpu') }}

    container:
      image: nvcr.io/nvidia/pytorch:23.03-py3
      options: --gpus all

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install Quantum GPU dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev,gpu]"
        pip install cuquantum-cu11 pennylane-gpu

    - name: Run Quantum GPU tests
      run: |
        pytest -v tests/quantum/ -m "gpu" --cov=qtlh.quantum --cov-report=xml

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: quantum-gpu-tests
        name: codecov-quantum-gpu

  integration-gpu:
    needs: [gpu-test, quantum-gpu]
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, 'skip gpu') }}

    container:
      image: nvcr.io/nvidia/pytorch:23.03-py3
      options: --gpus all

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev,gpu]"
        pip install cuquantum-cu11 pennylane-gpu

    - name: Run integration tests with GPU
      run: |
        pytest -v tests/integration/ -m "gpu" --cov=qtlh.integration --cov-report=xml

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: integration-gpu-tests
        name: codecov-integration-gpu

  benchmark:
    needs: [gpu-test]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    container:
      image: nvcr.io/nvidia/pytorch:23.03-py3
      options: --gpus all

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev,gpu]"
        pip install pytest-benchmark

    - name: Run GPU benchmarks
      run: |
        pytest benchmarks/ --benchmark-only --benchmark-json=benchmark_results.json

    - name: Store benchmark results
      uses: benchmark-action/github-action-benchmark@v1
      with:
        tool: 'pytest'
        output-file-path: benchmark_results.json
        github-token: ${{ secrets.GITHUB_TOKEN }}
        auto-push: true
        alert-threshold: '150%'
        comment-on-alert: true
        fail-on-alert: true

    - name: Upload benchmark results
      uses: actions/upload-artifact@v3
      with:
        name: gpu-benchmark-results
        path: benchmark_results.json
