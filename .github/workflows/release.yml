name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
        pip install git-changelog

    - name: Generate changelog
      run: |
        git-changelog \
          --output RELEASE_CHANGELOG.md \
          --template release \
          --sections feat,fix,perf,docs,refactor \
          --commits-under-sections \
          ${GITHUB_REF_NAME}

    - name: Build package
      run: python -m build

    - name: Create GitHub release
      uses: softprops/action-gh-release@v1
      with:
        body_path: RELEASE_CHANGELOG.md
        name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
        files: |
          dist/*.whl
          dist/*.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        twine check dist/*
        twine upload dist/*

  build-docs:
    needs: create-release
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[docs]"

    - name: Build documentation
      run: |
        cd docs
        make html

    - name: Deploy documentation
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs/_build/html
        commit_message: "üìö docs: update documentation for release ${{ github.ref_name }}"

  docker-release:
    needs: create-release
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract version
      id: version
      run: echo "VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_OUTPUT

    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          qtlh/framework:latest
          qtlh/framework:${{ steps.version.outputs.VERSION }}
        build-args: |
          VERSION=${{ steps.version.outputs.VERSION }}
        cache-from: type=registry,ref=qtlh/framework:buildcache
        cache-to: type=registry,ref=qtlh/framework:buildcache,mode=max

  notify:
    needs: [create-release, build-docs, docker-release]
    runs-on: ubuntu-latest
    if: success()

    steps:
    - name: Send release notification
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        message: |
          üéâ New QTL-H Framework Release ${{ github.ref_name }}
          
          üì¶ Package published to PyPI
          üìö Documentation updated
          üê≥ Docker image pushed
          
          Check it out at:
          https://github.com/qtlh-framework/qtlh-framework/releases/tag/${{ github.ref_name }}

    - name: Update release badge
      uses: schneegans/dynamic-badges-action@v1.6.0
      with:
        auth: ${{ secrets.GIST_TOKEN }}
        gistID: YOUR_GIST_ID
        filename: qtlh-version.json
        label: version
        message: ${{ github.ref_name }}
        color: blue
